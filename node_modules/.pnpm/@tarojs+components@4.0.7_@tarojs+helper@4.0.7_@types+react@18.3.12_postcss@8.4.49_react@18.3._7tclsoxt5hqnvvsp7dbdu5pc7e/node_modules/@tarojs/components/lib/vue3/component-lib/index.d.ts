export declare const CoverImage: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const CoverView: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const MatchMedia: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const MovableArea: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const MovableView: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const PageContainer: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const RootPortal: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export { default as ScrollView } from './scroll-view';
export declare const ShareElement: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Swiper: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const SwiperItem: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const View: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export { default as Icon } from './icon';
export declare const Progress: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const RichText: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export { default as Text } from './text';
export declare const Button: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Checkbox: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const CheckboxGroup: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Editor: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Form: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Input: {
    emits: string[];
    props: Record<string, any>;
    setup(props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const KeyboardAccessory: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Label: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Picker: {
    emits: string[];
    props: Record<string, any>;
    setup(props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const PickerView: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const PickerViewColumn: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Radio: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const RadioGroup: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Slider: {
    emits: string[];
    props: Record<string, any>;
    setup(props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Switch: {
    emits: string[];
    props: Record<string, any>;
    setup(props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Textarea: {
    emits: string[];
    props: Record<string, any>;
    setup(props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const FunctionalPageNavigator: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Navigator: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Audio: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Camera: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export { default as Image } from './image';
export declare const LivePlayer: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Video: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const VoipRoom: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Map: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Canvas: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const WebView: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Ad: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const AdCustom: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const OfficialAccount: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const OpenData: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const NavigationBar: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const PageMeta: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Block: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const CustomWrapper: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export declare const Slot: {
    emits: string[];
    setup(__props: any, { slots, emit }: {
        slots: any;
        emit: any;
    }): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
