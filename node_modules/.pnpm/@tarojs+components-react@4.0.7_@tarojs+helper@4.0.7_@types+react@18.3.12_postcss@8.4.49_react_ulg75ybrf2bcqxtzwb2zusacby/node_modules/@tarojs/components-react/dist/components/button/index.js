import { __rest } from 'tslib';
import './style/index.scss.js';
import classNames from 'classnames';
import { omit, createForwardRefComponent } from '../../utils/index.js';
import { useRef, useState, useEffect } from '../../utils/hooks.react.js';
import { jsxs, jsx } from 'react/jsx-runtime';

function Button(props) {
  const startTimer = useRef();
  const endTimer = useRef();
  const [state, setState] = useState({
    hover: false,
    touch: false
  });
  useEffect(() => {
    return () => {
      startTimer.current && clearTimeout(startTimer.current);
      endTimer.current && clearTimeout(endTimer.current);
    };
  }, []);
  const _onTouchStart = e => {
    setState(e => Object.assign(Object.assign({}, e), {
      touch: true
    }));
    if (props.hoverClass && props.hoverClass !== 'none' && !props.disabled) {
      startTimer.current = setTimeout(() => {
        if (state.touch) {
          setState(e => Object.assign(Object.assign({}, e), {
            hover: true
          }));
        }
      }, props.hoverStartTime || 20);
    }
    props.onTouchStart && props.onTouchStart(e);
  };
  const _onTouchEnd = e => {
    setState(e => Object.assign(Object.assign({}, e), {
      touch: false
    }));
    if (props.hoverClass && props.hoverClass !== 'none' && !props.disabled) {
      endTimer.current = setTimeout(() => {
        if (!state.touch) {
          setState(e => Object.assign(Object.assign({}, e), {
            hover: false
          }));
        }
      }, props.hoverStayTime || 70);
    }
    props.onTouchEnd && props.onTouchEnd(e);
  };
  const {
      forwardedRef,
      plain = false,
      children,
      disabled = false,
      className,
      style,
      onClick,
      hoverClass = 'button-hover',
      loading = false,
      type
    } = props,
    restProps = __rest(props, ["forwardedRef", "plain", "children", "disabled", "className", "style", "onClick", "hoverClass", "loading", "type"]);
  const cls = classNames(className, 'taro-button-core', {
    [`${hoverClass}`]: state.hover && !disabled
  });
  return /*#__PURE__*/jsxs("button", {
    ...omit(restProps, ['hoverClass', 'onTouchStart', 'onTouchEnd', 'type', 'loading', 'forwardedRef']),
    type: type,
    ref: forwardedRef,
    className: cls,
    style: style,
    onClick: onClick,
    disabled: disabled,
    onTouchStart: _onTouchStart,
    onTouchEnd: _onTouchEnd,
    loading: loading.toString(),
    plain: plain.toString(),
    children: [!!loading && /*#__PURE__*/jsx("i", {
      className: "weui-loading"
    }), children]
  });
}
var index = createForwardRefComponent(Button);

export { index as default };
//# sourceMappingURL=index.js.map
