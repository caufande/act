import { CompilerContext } from './base';
import type { AppConfig } from '@tarojs/taro';
import type { ViteAppMeta, ViteFileType, ViteHarmonyBuildConfig, ViteHarmonyCompilerContext, ViteNativeCompMeta, VitePageMeta } from '@tarojs/taro/types/compile/viteCompilerContext';
export declare function readJsonSync(file: string): any;
export declare class TaroCompilerContext extends CompilerContext<ViteHarmonyBuildConfig> implements ViteHarmonyCompilerContext {
    commonChunks: string[];
    fileType: ViteFileType;
    useETS: boolean;
    useJSON5: boolean;
    extraComponents: string[];
    nativeExt: string[];
    nativeComponents: Map<string, ViteNativeCompMeta>;
    ohpmPackageList: string[];
    constructor(appPath: string, taroConfig: ViteHarmonyBuildConfig);
    processConfig(): void;
    getCommonChunks(): string[];
    compilePage: (pageName: string) => VitePageMeta;
    collectNativeComponents(meta: ViteAppMeta | VitePageMeta | ViteNativeCompMeta): void;
    modifyHarmonyResources(id?: string, data?: any): void;
    modifyHarmonyConfig(config?: Partial<AppConfig>): void;
    modifyHostPackage(hmsDeps?: Record<string, string>, hmsDevDeps?: Record<string, string>): any;
    /** 工具函数 */
    getScriptPath(filePath: string): string;
    getStylePath(filePath: string): string;
    getConfigPath(filePath: string): string;
    getETSPath(filePath: string): string | null;
}
