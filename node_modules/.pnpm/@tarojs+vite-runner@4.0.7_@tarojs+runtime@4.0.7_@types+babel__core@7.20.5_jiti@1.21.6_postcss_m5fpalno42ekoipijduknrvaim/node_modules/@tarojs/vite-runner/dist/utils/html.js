"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHtmlScript = void 0;
function getHtmlScript(entryScript, pxtransformOption) {
    var _a, _b, _c;
    let htmlScript = '';
    const options = (pxtransformOption === null || pxtransformOption === void 0 ? void 0 : pxtransformOption.config) || {};
    const max = (_a = options === null || options === void 0 ? void 0 : options.maxRootSize) !== null && _a !== void 0 ? _a : 40;
    const min = (_b = options === null || options === void 0 ? void 0 : options.minRootSize) !== null && _b !== void 0 ? _b : 20;
    const baseFontSize = (options === null || options === void 0 ? void 0 : options.baseFontSize) || (min > 1 ? min : 20);
    const designWidth = ((input) => typeof options.designWidth === 'function' ? options.designWidth(input) : options.designWidth)(baseFontSize);
    const rootValue = (baseFontSize / options.deviceRatio[designWidth]) * 2;
    if (((_c = options === null || options === void 0 ? void 0 : options.targetUnit) !== null && _c !== void 0 ? _c : 'rem') === 'rem') {
        htmlScript = `<script>!function(n){function f(){var e=n.document.documentElement,r=e.getBoundingClientRect(),width=r.width,height=r.height,arr=[width,height].filter(function(value){return Boolean(value)}),w=Math.min.apply(Math,arr),x=${rootValue}*w/${designWidth};e.style.fontSize=x>=${max}?"${max}px":x<=${min}?"${min}px":x+"px"}; n.addEventListener("resize",(function(){f()})),f()}(window);</script>\n`;
    }
    htmlScript += `  <script type="module" src="${entryScript}"></script>`;
    return htmlScript;
}
exports.getHtmlScript = getHtmlScript;
//# sourceMappingURL=html.js.map