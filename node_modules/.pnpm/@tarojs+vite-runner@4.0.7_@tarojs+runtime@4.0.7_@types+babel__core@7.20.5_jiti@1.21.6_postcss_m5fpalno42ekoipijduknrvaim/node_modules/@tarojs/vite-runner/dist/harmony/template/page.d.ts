import BaseParser from './base';
import type { AppConfig, TabBarItem } from '@tarojs/taro';
import type { TRollupResolveMethod } from '@tarojs/taro/types/compile/config/plugin';
import type { ViteHarmonyBuildConfig, VitePageMeta } from '@tarojs/taro/types/compile/viteCompilerContext';
export interface IMethod {
    name: string;
    decorators?: string[];
    prefix?: string;
    type?: 'function' | 'arrow' | 'method' | 'async function' | 'async arrow' | 'async method';
    params?: string[] | false;
    return?: string;
    body?: string;
}
export interface TaroHarmonyPageMeta extends VitePageMeta {
    id: string;
    originName: string;
    entryOption?: Record<string, unknown>;
    modifyRenderState?: (this: Parser, state: (string | null)[], page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => void;
    modifyPageParams?: (this: Parser, paramsString: string, page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => string;
    modifyPageImport?: (this: Parser, importStr: string[], page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => void;
    modifyPageAppear?: (this: Parser, appearStr: string, page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => string;
    modifyPageDisappear?: (this: Parser, appearStr: string, page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => string;
    modifyPageBuild?: (this: Parser, buildStr: string, page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => string;
    modifyPageMethods?: (this: Parser, methods: IMethod[], page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]) => void;
}
export default class Parser extends BaseParser {
    #private;
    protected appPath: string;
    protected appConfig: AppConfig;
    buildConfig: ViteHarmonyBuildConfig;
    loaderMeta: Record<string, unknown>;
    isPure?: boolean | undefined;
    isTabbarPage: boolean;
    enableRefresh: number;
    tabbarList: TabBarItem[];
    constructor(appPath: string, appConfig: AppConfig, buildConfig: ViteHarmonyBuildConfig, loaderMeta: Record<string, unknown>, isPure?: boolean | undefined);
    init(): void;
    getInitPxTransform(): any;
    isEnable(app?: boolean, page?: boolean): boolean;
    renderState({ scope, decorator, name, type, prefix, suffix, connector, foreach, disabled, }: {
        scope?: string[] | undefined;
        decorator?: string | undefined;
        name?: string | undefined;
        type?: string | undefined;
        prefix?: string | undefined;
        suffix?: string | undefined;
        connector?: string | undefined;
        foreach?: ((_item: unknown, _idx: number | string) => string) | undefined;
        disabled?: boolean | undefined;
    }, isTabPage: boolean): string | null;
    renderMethods(methods: IMethod[]): string;
    getInstantiatePage(page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]): any;
    generatePageHandleAppear(page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]): string;
    renderPage(isTabPage: boolean, appEnableRefresh?: boolean, enableRefresh?: number): string;
    generatePageAboutToAppear(page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]): string;
    generatePageAboutToDisAppear(page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[]): any;
    generatePageShown(): any;
    generatePageHidden(): any;
    parse(rawId: string, page: TaroHarmonyPageMeta | TaroHarmonyPageMeta[], name?: string, resolve?: TRollupResolveMethod): string;
    parseEntry(rawId: string, page: TaroHarmonyPageMeta): any;
}
